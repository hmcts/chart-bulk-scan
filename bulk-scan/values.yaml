bulk-scan-processor:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-bsp"
    secrets:
      SB_CONN_STRING:
        secretRef: servicebus-secret-namespace-{{ .Release.Name }}-sb
        key: connectionString
      TEST_STORAGE_ACCOUNT_NAME:
        secretRef: storage-secret-{{ .Release.Name }}
        key: storageAccountName
      TEST_STORAGE_ACCOUNT_KEY:
        secretRef: storage-secret-{{ .Release.Name }}
        key: accessKey
      TEST_STORAGE_CONTAINER_NAME:
        secretRef: container-secret-{{ .Release.Name }}-bulkscan
        key: containerName
      STORAGE_ACCOUNT_NAME:
        secretRef: storage-secret-{{ .Release.Name }}
        key: storageAccountName
      STORAGE_KEY:
        secretRef: storage-secret-{{ .Release.Name }}
        key: accessKey
    environment:
      STORAGE_URL: "https://$(STORAGE_ACCOUNT_NAME).blob.core.windows.net"
      QUEUE_ENVELOPE_SEND: "$(SB_CONN_STRING);EntityPath=envelopes"
      QUEUE_NOTIFICATIONS_SEND: "$(SB_CONN_STRING);EntityPath=notifications"
      QUEUE_NOTIFICATIONS_READ: "$(SB_CONN_STRING);EntityPath=notifications"
      QUEUE_PROCESSED_ENVELOPES_READ: "$(SB_CONN_STRING);EntityPath=processed-envelopes"
      PROCESSED_ENVELOPES_QUEUE_WRITE_CONN_STRING: "${SB_CONN_STRING};EntityPath=processed-envelopes"
      SCAN_ENABLED: "true"
      SCAN_DELAY: "4000"
      REUPLOAD_ENABLED: "true"
      REUPLOAD_DELAY: "4000"
      SPRING_MAIL_HOST: "false"
      NOTIFICATIONS_TO_ORCHESTRATOR_TASK_ENABLED: "true"
      NOTIFICATIONS_TO_ORCHESTRATOR_TASK_DELAY: "3000"
      BULK_SCANNING_DB_USER_NAME: "{{ .Values.global.postgresqlUsername}}"
      BULK_SCANNING_DB_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      BULK_SCANNING_DB_NAME: "bulk_scan"
      BULK_SCANNING_DB_HOST: "{{ tpl .Values.global.postgresqlHostName $}}"
      BULK_SCANNING_DB_PORT: "5432"
      FLYWAY_URL: "jdbc:postgresql://{{ tpl .Values.global.postgresqlHostName $}}:5432/bulk_scan"
      FLYWAY_USER: "{{ .Values.global.postgresqlUsername}}"
      FLYWAY_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      FLYWAY_NOOP_STRATEGY: "false"
      PROCESS_PAYMENTS_ENABLED: "false"
      S2S_SECRET: AAAAAAAAAAAAAAAA
      S2S_URL: "{{ tpl .Values.global.s2sUrl $}}"
      DOCUMENT_MANAGEMENT_URL: "{{ tpl .Values.global.dmstoreUrl $}}"
      DELETE_REJECTED_FILES_ENABLED: "false"
  servicebus:
    releaseNameOverride: "{{ .Release.Name }}-sb"
    resourceGroup: bulk-scan-aks
    teamName: "Software Engineering"
    location: uksouth
    serviceplan: basic
    setup:
      queues:
        - name: envelopes
        - name: notifications
        - name: processed-envelopes

  blobstorage:
    resourceGroup: bulk-scan-aks
    teamName: "Software Engineering"
    location: ukwest
    setup:
      containers:
        - bulkscan
        - bulkscan-rejected
        - sscs
bulk-scan-orchestrator:
  java:
    releaseNameOverride: "{{ .Release.Name }}-bso"
    ingressHost: ""
    secrets:
      SB_CONN_STRING:
        secretRef: servicebus-secret-namespace-{{ .Release.Name }}-sb
        key: connectionString
    environment:
      ENVELOPES_QUEUE_CONNECTION_STRING: "$(SB_CONN_STRING);EntityPath=envelopes"
      ENVELOPES_QUEUE_MAX_DELIVERY_COUNT: "10"
      PROCESSED_ENVELOPES_QUEUE_CONNECTION_STRING: "$(SB_CONN_STRING);EntityPath=processed-envelopes"
      PAYMENTS_QUEUE_CONNECTION_STRING: "$(SB_CONN_STRING);EntityPath=payments"
      QUEUE_READ_INTERVAL: "30000"
      DELETE_ENVELOPES_DLQ_MESSAGES_ENABLED: "true"
      DELETE_ENVELOPES_DLQ_MESSAGES_CRON: "0 * * * * *"
      DELETE_ENVELOPES_DLQ_MESSAGES_TTL: "10s"
      S2S_URL: "{{ tpl .Values.global.s2sUrl $}}"
      IDAM_API_URL: "{{ .Values.global.idamApiUrl }}"
      IDAM_CLIENT_REDIRECT_URI: "{{ .Values.global.bsoIdamRedirectUrl }}"
      CORE_CASE_DATA_API_URL: "{{ .Values.global.ccdDataStoreUrl }}"
      DOCUMENT_MANAGEMENT_URL: "{{ tpl .Values.global.dmstoreUrl $}}"
  servicebus:
    resourceGroup: bulk-scan-aks
    teamName: "Software Engineering"
    location: ukwest
    serviceplan: basic
    setup:
      queues:
        - name: envelopes
        - name: notifications
        - name: processed-envelopes
        - name: payments

rpe-service-auth-provider:
  java:
    ingressHost: ""
    image: hmctspublic.azurecr.io/rpe/service-auth-provider:latest
    releaseNameOverride: "{{ .Release.Name }}-s2s"
    environment:
      TESTING_SUPPORT_ENABLED: 'true'
      MICROSERVICEKEYS_BULK_SCAN_PROCESSOR: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_BULK_SCAN_ORCHESTRATOR: AAAAAAAAAAAAAAAA

dm-store:
  java:
    releaseNameOverride: "{{ .Release.Name}}-dm-store"
    readinessDelay: 180
    livenessDelay: 180
    secrets:
      STORAGE_ACCOUNT_NAME:
        disabled: true
      STORAGE_ACCOUNT_KEY:
        disabled: true
      STORAGE_CONTAINER_DOCUMENT_CONTAINER_NAME:
        disabled: true
    keyVaults: {}
    environment:
      ENABLE_DB_MIGRATE: 'true'
      ENABLE_TTL: 'false'
      SPRING_DATASOURCE_URL:  jdbc:postgresql://{{ tpl .Values.global.postgresqlHostName $}}:5432/evidence?ssl=disable
      SPRING_DATASOURCE_USERNAME: '{{ .Values.global.postgresqlUsername }}'
      SPRING_DATASOURCE_PASSWORD: '{{ .Values.global.postgresqlPassword }}'
      ENABLE_AZURE_STORAGE_CONTAINER: 'false'
      POSTGRES_STORAGE_ENABLED: 'true'
      STORAGEACCOUNT_PRIMARY_CONNECTION_STRING: 'DefaultEndpointsProtocol=https;AccountName=AAAAAAAAAAAAAAAA;AccountKey=AAAAAAAAAAAAAAAA;EndpointSuffix=core.windows.net'
      IDAM_USER_BASE_URI: '{{ .Values.global.idamApiUrl }}'
      IDAM_S2S_BASE_URI: "{{ tpl .Values.global.s2sUrl $}}"
postgresql:
  persistence:
    enabled: false
  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  postgresqlDatabase: bulk_scan
  initdbScripts:
    init.sql: |-
      CREATE DATABASE "evidence" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
bulkscan:
  postgresql:
    enabled: true
  s2s:
    enabled: true
  dmStore:
    enabled: true
  ccd:
    enabled: false
bsp:
  servicebus:
    enabled: true
  blobstorage:
    enabled: true
bso:
  servicebus:
    enabled: false
global:
  devMode: true
  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  bsoIdamRedirectUrl: "https://bulk-scan-orchestrator/oauth2/callback"
  s2sUrl: "{{ .Release.Name }}-s2s"
  postgresqlHostName: "{{ .Release.Name }}-postgresql"
  dmstoreUrl: "{{ .Release.Name }}-dm-store"
